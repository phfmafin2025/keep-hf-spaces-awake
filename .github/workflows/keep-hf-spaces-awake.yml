name: Keep HF Spaces Awake (every 8h)

on:
  schedule:
    - cron: "0 */8 * * *"
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Ping Spaces
        shell: bash
        run: |
          set -euo pipefail
          urls=(
            "https://cesparzaf-fraqx-financial-v2.hf.space/"
            "https://cesparzaf-fraqx-anpr-demo.hf.space/"
            "https://cesparzaf-forecast-chronos.hf.space/"
            "https://cesparzaf/icb4-leadership-star"
            "https://cesparzaf/MG360"
            "https://cesparzaf/MG360Light"
            "https://FRAQX1/icb4-leadership-star"
            "https://FRAQX1/MG360"
            "https://FRAQX1/mg360light"
            "https://PHDMAFIN/icb4-leadership-star"
            "https://PHDMAFIN/MG360"
            "https://PHDMAFIN/mg360light"
          )
          ok=() ; ko=()
          start=$(date +%s)
          for u in "${urls[@]}"; do
            echo "👉 $u"
            if curl -fsSL --max-time 30 "$u" -o /dev/null; then ok+=("$u"); else ko+=("$u"); fi
          done
          end=$(date +%s)
          duration=$((end-start))
          local_time=$(TZ="America/Mexico_City" date '+%d/%m/%Y %H:%M:%S')
          {
            echo 'OK_LIST<<__EOF__'; printf '%s\n' "${ok[@]:-}"; echo '__EOF__'
            echo 'KO_LIST<<__EOF__'; printf '%s\n' "${ko[@]:-}"; echo '__EOF__'
            echo "OK_COUNT=${#ok[@]}"
            echo "KO_COUNT=${#ko[@]}"
            echo "TOTAL=${#urls[@]}"
            echo "DURATION=${duration}"
            echo "LOCAL_TIME=${local_time}"
          } >> "$GITHUB_ENV"
          {
            echo "### Keep-alive summary"
            echo "- Total: ${#urls[@]}"
            echo "- ✅ OK: ${#ok[@]}"
            echo "- ❌ Fails: ${#ko[@]}"
            echo "- ⏱️ Duración: ${duration}s"
            echo "- 🕒 Hora local: ${local_time} (CDMX)"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Notify Telegram
        if: always()
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          STATUS: ${{ job.status }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          REPO: ${{ github.repository }}
          WF: ${{ github.workflow }}
          RUN_NO: ${{ github.run_number }}
          ACTOR: ${{ github.actor }}
          OK_COUNT: ${{ env.OK_COUNT }}
          KO_COUNT: ${{ env.KO_COUNT }}
          TOTAL: ${{ env.TOTAL }}
          OK_LIST: ${{ env.OK_LIST }}
          KO_LIST: ${{ env.KO_LIST }}
          DURATION: ${{ env.DURATION }}
          LOCAL_TIME: ${{ env.LOCAL_TIME }}
        shell: bash
        run: |
          set -euo pipefail
          fmt () {
            if [ -z "${1:-}" ]; then echo "—"; else while IFS= read -r l; do [ -n "$l" ] && printf '• %s\n' "$l"; done <<< "$1"; fi
          }
          [ "$STATUS" = "success" ] && EMOJI="✅" || EMOJI="❌"
          OK_TXT="$(fmt "$OK_LIST")"
          KO_TXT="$(fmt "$KO_LIST")"
          TEXT=$(printf '%s\n' \
            "$EMOJI $STATUS — $WF #$RUN_NO" \
            "Repo: $REPO" \
            "By: $ACTOR" \
            "Run: $RUN_URL" \
            "" \
            "🕒 Hora local (CDMX): $LOCAL_TIME" \
            "⏱️ Duración total: ${DURATION}s" \
            "" \
            "Total: $TOTAL  |  ✅ OK: $OK_COUNT  |  ❌ Fails: $KO_COUNT" \
            "" \
            "OK:" \
            "$OK_TXT" \
            "" \
            "Fails:" \
            "$KO_TXT" )
          curl -sS -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d chat_id="$CHAT_ID" \
            --data-urlencode text="$TEXT" \
            -d disable_web_page_preview=true
