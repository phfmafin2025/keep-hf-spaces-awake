      - name: Notify Telegram
        if: always()
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          STATUS: ${{ job.status }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          REPO: ${{ github.repository }}
          WF: ${{ github.workflow }}
          RUN_NO: ${{ github.run_number }}
          ACTOR: ${{ github.actor }}
          OK_COUNT: ${{ env.OK_COUNT }}
          KO_COUNT: ${{ env.KO_COUNT }}
          TOTAL: ${{ env.TOTAL }}
          OK_LIST: ${{ env.OK_LIST }}
          KO_LIST: ${{ env.KO_LIST }}
          DURATION: ${{ env.DURATION }}
          LOCAL_TIME: ${{ env.LOCAL_TIME }}
        shell: bash
        run: |
          set -euo pipefail

          format_list () {
            if [ -z "${1:-}" ]; then
              echo "—"
            else
              while IFS= read -r line; do
                [ -n "$line" ] && printf '• %s\n' "$line"
              done <<< "$1"
            fi
          }

          if [ "$STATUS" = "success" ]; then
            EMOJI="✅"
          else
            EMOJI="❌"
          fi

          OK_TXT="$(format_list "$OK_LIST")"
          KO_TXT="$(format_list "$KO_LIST")"

          TEXT="$EMOJI $STATUS — $WF #$RUN_NO\n\
Repo: $REPO\n\
By: $ACTOR\n\
Run: $RUN_URL\n\n\
🕒 Hora local (CDMX): $LOCAL_TIME\n\
⏱️ Duración total: ${DURATION}s\n\n\
Total: $TOTAL  |  ✅ OK: $OK_COUNT  |  ❌ Fails: $KO_COUNT\n\n\
OK:\n$OK_TXT\n\nFails:\n$KO_TXT"

          curl -sS -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d chat_id="$CHAT_ID" \
            --data-urlencode text="$TEXT" \
            -d disable_web_page_preview=true
